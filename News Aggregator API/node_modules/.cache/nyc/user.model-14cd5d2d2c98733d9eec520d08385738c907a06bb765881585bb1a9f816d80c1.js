function cov_1i8dx6ao1k(){var path="E:\\airtribe\\Projects\\Backend-projects\\News Aggregator API\\models\\user.model.js";var hash="307733f2131dca59a397d283705a5e27e77124e7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\airtribe\\Projects\\Backend-projects\\News Aggregator API\\models\\user.model.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:36}},"1":{start:{line:2,column:15},end:{line:2,column:32}},"2":{start:{line:3,column:18},end:{line:3,column:38}},"3":{start:{line:5,column:19},end:{line:31,column:2}},"4":{start:{line:34,column:0},end:{line:37,column:2}},"5":{start:{line:35,column:15},end:{line:35,column:44}},"6":{start:{line:36,column:2},end:{line:36,column:22}},"7":{start:{line:39,column:0},end:{line:41,column:2}},"8":{start:{line:40,column:2},end:{line:40,column:55}},"9":{start:{line:43,column:0},end:{line:48,column:2}},"10":{start:{line:44,column:2},end:{line:46,column:3}},"11":{start:{line:45,column:4},end:{line:45,column:17}},"12":{start:{line:47,column:2},end:{line:47,column:14}},"13":{start:{line:50,column:13},end:{line:50,column:47}},"14":{start:{line:52,column:0},end:{line:52,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:34,column:34},end:{line:34,column:35}},loc:{start:{line:34,column:57},end:{line:37,column:1}},line:34},"1":{name:"(anonymous_1)",decl:{start:{line:39,column:37},end:{line:39,column:38}},loc:{start:{line:39,column:63},end:{line:41,column:1}},line:39},"2":{name:"(anonymous_2)",decl:{start:{line:43,column:38},end:{line:43,column:39}},loc:{start:{line:43,column:58},end:{line:48,column:1}},line:43}},branchMap:{"0":{loc:{start:{line:44,column:2},end:{line:46,column:3}},type:"if",locations:[{start:{line:44,column:2},end:{line:46,column:3}},{start:{line:44,column:2},end:{line:46,column:3}}],line:44},"1":{loc:{start:{line:44,column:6},end:{line:44,column:58}},type:"binary-expr",locations:[{start:{line:44,column:6},end:{line:44,column:27}},{start:{line:44,column:31},end:{line:44,column:58}}],line:44}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"307733f2131dca59a397d283705a5e27e77124e7"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1i8dx6ao1k=function(){return actualCoverage;};}return actualCoverage;}cov_1i8dx6ao1k();const mongoose=(cov_1i8dx6ao1k().s[0]++,require("mongoose"));const bcrypt=(cov_1i8dx6ao1k().s[1]++,require("bcrypt"));const validator=(cov_1i8dx6ao1k().s[2]++,require("validator"));const userSchema=(cov_1i8dx6ao1k().s[3]++,mongoose.Schema({name:{type:String,trim:true,required:[true,"name not provided "],minlength:[2,"minimum 2 characters required in name"],maxlength:[30,"number of characters in name exceeding 30"]},email:{type:String,trim:true,lowercase:true,required:[true,"email not provided"],unique:true,validate:[validator.isEmail,"invalid email"]},password:{type:String,trim:true,required:[true,"password not provided "],minLength:3},createdAt:{type:Date,default:Date.now}}));// since arrow function do not have their own 'this', so we use normal function notation
cov_1i8dx6ao1k().s[4]++;userSchema.statics.isEmailTaken=async function(email){cov_1i8dx6ao1k().f[0]++;const user=(cov_1i8dx6ao1k().s[5]++,await this.findOne({email}));cov_1i8dx6ao1k().s[6]++;return user!=null;};cov_1i8dx6ao1k().s[7]++;userSchema.methods.isPasswordMatch=async function(password){cov_1i8dx6ao1k().f[1]++;cov_1i8dx6ao1k().s[8]++;return await bcrypt.compare(password,this.password);};cov_1i8dx6ao1k().s[9]++;userSchema.statics.isStrongPassword=async password=>{cov_1i8dx6ao1k().f[2]++;cov_1i8dx6ao1k().s[10]++;if((cov_1i8dx6ao1k().b[1][0]++,!password.match(/\d/))||(cov_1i8dx6ao1k().b[1][1]++,!password.match(/[a-zA-Z]/))){cov_1i8dx6ao1k().b[0][0]++;cov_1i8dx6ao1k().s[11]++;return false;}else{cov_1i8dx6ao1k().b[0][1]++;}cov_1i8dx6ao1k().s[12]++;return true;};const User=(cov_1i8dx6ao1k().s[13]++,mongoose.model("User",userSchema));cov_1i8dx6ao1k().s[14]++;module.exports={User};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWk4ZHg2YW8xayIsImFjdHVhbENvdmVyYWdlIiwibW9uZ29vc2UiLCJzIiwicmVxdWlyZSIsImJjcnlwdCIsInZhbGlkYXRvciIsInVzZXJTY2hlbWEiLCJTY2hlbWEiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInRyaW0iLCJyZXF1aXJlZCIsIm1pbmxlbmd0aCIsIm1heGxlbmd0aCIsImVtYWlsIiwibG93ZXJjYXNlIiwidW5pcXVlIiwidmFsaWRhdGUiLCJpc0VtYWlsIiwicGFzc3dvcmQiLCJtaW5MZW5ndGgiLCJjcmVhdGVkQXQiLCJEYXRlIiwiZGVmYXVsdCIsIm5vdyIsInN0YXRpY3MiLCJpc0VtYWlsVGFrZW4iLCJmIiwidXNlciIsImZpbmRPbmUiLCJtZXRob2RzIiwiaXNQYXNzd29yZE1hdGNoIiwiY29tcGFyZSIsImlzU3Ryb25nUGFzc3dvcmQiLCJiIiwibWF0Y2giLCJVc2VyIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsidXNlci5tb2RlbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTtcclxuY29uc3QgYmNyeXB0ID0gcmVxdWlyZShcImJjcnlwdFwiKTtcclxuY29uc3QgdmFsaWRhdG9yID0gcmVxdWlyZShcInZhbGlkYXRvclwiKTtcclxuXHJcbmNvbnN0IHVzZXJTY2hlbWEgPSBtb25nb29zZS5TY2hlbWEoe1xyXG4gIG5hbWU6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHRyaW06IHRydWUsXHJcbiAgICByZXF1aXJlZDogW3RydWUsIFwibmFtZSBub3QgcHJvdmlkZWQgXCJdLFxyXG4gICAgbWlubGVuZ3RoOiBbMiwgXCJtaW5pbXVtIDIgY2hhcmFjdGVycyByZXF1aXJlZCBpbiBuYW1lXCJdLFxyXG4gICAgbWF4bGVuZ3RoOiBbMzAsIFwibnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gbmFtZSBleGNlZWRpbmcgMzBcIl0sXHJcbiAgfSxcclxuICBlbWFpbDoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgdHJpbTogdHJ1ZSxcclxuICAgIGxvd2VyY2FzZTogdHJ1ZSxcclxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgXCJlbWFpbCBub3QgcHJvdmlkZWRcIl0sXHJcbiAgICB1bmlxdWU6IHRydWUsXHJcbiAgICB2YWxpZGF0ZTogW3ZhbGlkYXRvci5pc0VtYWlsLCBcImludmFsaWQgZW1haWxcIl0sXHJcbiAgfSxcclxuICBwYXNzd29yZDoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgdHJpbTogdHJ1ZSxcclxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgXCJwYXNzd29yZCBub3QgcHJvdmlkZWQgXCJdLFxyXG4gICAgbWluTGVuZ3RoOiAzLFxyXG4gIH0sXHJcbiAgY3JlYXRlZEF0OiB7XHJcbiAgICB0eXBlOiBEYXRlLFxyXG4gICAgZGVmYXVsdDogRGF0ZS5ub3csXHJcbiAgfSxcclxufSk7XHJcblxyXG4vLyBzaW5jZSBhcnJvdyBmdW5jdGlvbiBkbyBub3QgaGF2ZSB0aGVpciBvd24gJ3RoaXMnLCBzbyB3ZSB1c2Ugbm9ybWFsIGZ1bmN0aW9uIG5vdGF0aW9uXHJcbnVzZXJTY2hlbWEuc3RhdGljcy5pc0VtYWlsVGFrZW4gPSBhc3luYyBmdW5jdGlvbiAoZW1haWwpIHtcclxuICBjb25zdCB1c2VyID0gYXdhaXQgdGhpcy5maW5kT25lKHsgZW1haWwgfSk7XHJcbiAgcmV0dXJuIHVzZXIgIT0gbnVsbDtcclxufTtcclxuXHJcbnVzZXJTY2hlbWEubWV0aG9kcy5pc1Bhc3N3b3JkTWF0Y2ggPSBhc3luYyBmdW5jdGlvbiAocGFzc3dvcmQpIHtcclxuICByZXR1cm4gYXdhaXQgYmNyeXB0LmNvbXBhcmUocGFzc3dvcmQsIHRoaXMucGFzc3dvcmQpO1xyXG59O1xyXG5cclxudXNlclNjaGVtYS5zdGF0aWNzLmlzU3Ryb25nUGFzc3dvcmQgPSBhc3luYyAocGFzc3dvcmQpID0+IHtcclxuICBpZiAoIXBhc3N3b3JkLm1hdGNoKC9cXGQvKSB8fCAhcGFzc3dvcmQubWF0Y2goL1thLXpBLVpdLykpIHtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcbiAgcmV0dXJuIHRydWU7XHJcbn07XHJcblxyXG5jb25zdCBVc2VyID0gbW9uZ29vc2UubW9kZWwoXCJVc2VyXCIsIHVzZXJTY2hlbWEpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7IFVzZXIgfTtcclxuIl0sIm1hcHBpbmdzIjoiaTVFQWVZO0FBQUFBLGNBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsY0FBQSxHQWZaLEtBQU0sQ0FBQUUsUUFBUSxFQUFBRixjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUNwQyxLQUFNLENBQUFDLE1BQU0sRUFBQUwsY0FBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFDaEMsS0FBTSxDQUFBRSxTQUFTLEVBQUFOLGNBQUEsR0FBQUcsQ0FBQSxNQUFHQyxPQUFPLENBQUMsV0FBVyxDQUFDLEVBRXRDLEtBQU0sQ0FBQUcsVUFBVSxFQUFBUCxjQUFBLEdBQUFHLENBQUEsTUFBR0QsUUFBUSxDQUFDTSxNQUFNLENBQUMsQ0FDakNDLElBQUksQ0FBRSxDQUNKQyxJQUFJLENBQUVDLE1BQU0sQ0FDWkMsSUFBSSxDQUFFLElBQUksQ0FDVkMsUUFBUSxDQUFFLENBQUMsSUFBSSxDQUFFLG9CQUFvQixDQUFDLENBQ3RDQyxTQUFTLENBQUUsQ0FBQyxDQUFDLENBQUUsdUNBQXVDLENBQUMsQ0FDdkRDLFNBQVMsQ0FBRSxDQUFDLEVBQUUsQ0FBRSwyQ0FBMkMsQ0FDN0QsQ0FBQyxDQUNEQyxLQUFLLENBQUUsQ0FDTE4sSUFBSSxDQUFFQyxNQUFNLENBQ1pDLElBQUksQ0FBRSxJQUFJLENBQ1ZLLFNBQVMsQ0FBRSxJQUFJLENBQ2ZKLFFBQVEsQ0FBRSxDQUFDLElBQUksQ0FBRSxvQkFBb0IsQ0FBQyxDQUN0Q0ssTUFBTSxDQUFFLElBQUksQ0FDWkMsUUFBUSxDQUFFLENBQUNiLFNBQVMsQ0FBQ2MsT0FBTyxDQUFFLGVBQWUsQ0FDL0MsQ0FBQyxDQUNEQyxRQUFRLENBQUUsQ0FDUlgsSUFBSSxDQUFFQyxNQUFNLENBQ1pDLElBQUksQ0FBRSxJQUFJLENBQ1ZDLFFBQVEsQ0FBRSxDQUFDLElBQUksQ0FBRSx3QkFBd0IsQ0FBQyxDQUMxQ1MsU0FBUyxDQUFFLENBQ2IsQ0FBQyxDQUNEQyxTQUFTLENBQUUsQ0FDVGIsSUFBSSxDQUFFYyxJQUFJLENBQ1ZDLE9BQU8sQ0FBRUQsSUFBSSxDQUFDRSxHQUNoQixDQUNGLENBQUMsQ0FBQyxFQUVGO0FBQUExQixjQUFBLEdBQUFHLENBQUEsTUFDQUksVUFBVSxDQUFDb0IsT0FBTyxDQUFDQyxZQUFZLENBQUcsZUFBZ0JaLEtBQUssQ0FBRSxDQUFBaEIsY0FBQSxHQUFBNkIsQ0FBQSxNQUN2RCxLQUFNLENBQUFDLElBQUksRUFBQTlCLGNBQUEsR0FBQUcsQ0FBQSxNQUFHLEtBQU0sS0FBSSxDQUFDNEIsT0FBTyxDQUFDLENBQUVmLEtBQU0sQ0FBQyxDQUFDLEVBQUNoQixjQUFBLEdBQUFHLENBQUEsTUFDM0MsTUFBTyxDQUFBMkIsSUFBSSxFQUFJLElBQUksQ0FDckIsQ0FBQyxDQUFDOUIsY0FBQSxHQUFBRyxDQUFBLE1BRUZJLFVBQVUsQ0FBQ3lCLE9BQU8sQ0FBQ0MsZUFBZSxDQUFHLGVBQWdCWixRQUFRLENBQUUsQ0FBQXJCLGNBQUEsR0FBQTZCLENBQUEsTUFBQTdCLGNBQUEsR0FBQUcsQ0FBQSxNQUM3RCxNQUFPLE1BQU0sQ0FBQUUsTUFBTSxDQUFDNkIsT0FBTyxDQUFDYixRQUFRLENBQUUsSUFBSSxDQUFDQSxRQUFRLENBQUMsQ0FDdEQsQ0FBQyxDQUFDckIsY0FBQSxHQUFBRyxDQUFBLE1BRUZJLFVBQVUsQ0FBQ29CLE9BQU8sQ0FBQ1EsZ0JBQWdCLENBQUcsS0FBTyxDQUFBZCxRQUFRLEVBQUssQ0FBQXJCLGNBQUEsR0FBQTZCLENBQUEsTUFBQTdCLGNBQUEsR0FBQUcsQ0FBQSxPQUN4RCxHQUFJLENBQUFILGNBQUEsR0FBQW9DLENBQUEsVUFBQ2YsUUFBUSxDQUFDZ0IsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFBckMsY0FBQSxHQUFBb0MsQ0FBQSxTQUFJLENBQUNmLFFBQVEsQ0FBQ2dCLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFBckMsY0FBQSxHQUFBb0MsQ0FBQSxTQUFBcEMsY0FBQSxHQUFBRyxDQUFBLE9BQ3hELE1BQU8sTUFBSyxDQUNkLENBQUMsS0FBQUgsY0FBQSxHQUFBb0MsQ0FBQSxVQUFBcEMsY0FBQSxHQUFBRyxDQUFBLE9BQ0QsTUFBTyxLQUFJLENBQ2IsQ0FBQyxDQUVELEtBQU0sQ0FBQW1DLElBQUksRUFBQXRDLGNBQUEsR0FBQUcsQ0FBQSxPQUFHRCxRQUFRLENBQUNxQyxLQUFLLENBQUMsTUFBTSxDQUFFaEMsVUFBVSxDQUFDLEVBQUNQLGNBQUEsR0FBQUcsQ0FBQSxPQUVoRHFDLE1BQU0sQ0FBQ0MsT0FBTyxDQUFHLENBQUVILElBQUssQ0FBQyJ9